#!/usr/bin/python
import os
import sys
import signal
from optparse import OptionParser

print "============================================================================"
print "                     nodewatcher gateway policy daemon                      "
print "============================================================================"

if os.getuid() != 0:
  print "ERROR: Must be root to set policy!"
  exit(1)

# Parse command line options
parser = OptionParser()
parser.add_option('--path', dest = 'path', help = 'Path that contains nodewatcher "web" Python module')
parser.add_option('--settings', dest = 'settings', help = 'Django settings to use',
                  default = 'web.settings_production')
parser.add_option('-i', '--interface', dest = 'interface', help = 'Shaped interface')
parser.add_option('-p', '--prefix', dest = 'prefix', help = 'Subnet prefix')
parser.add_option('-r', '--refresh-interval', dest = 'refresh', type = 'int',
                  default = 5, help = 'Refresh interval (in seconds)')
parser.add_option('-d', '--debug', dest = 'debug', action = 'store_true', help = 'Output debug messages')
options, args = parser.parse_args()
options = options.__dict__

for key in ('path', 'settings', 'interface', 'prefix'):
  if not options[key]:
    print "ERROR: You must specify --path, --settings, --interface and --prefix!"
    exit(1)

# Setup import paths, since we are using Django models
sys.path.append(options['path'])
os.environ['DJANGO_SETTINGS_MODULE'] = options['settings']

# Import policy control classes
from lib import traffic_control

controller = traffic_control.Controller(
  options['interface'],
  options['prefix'],
  options['refresh'],
  options['debug']
)

# Install signal handler for SIGTERM
def handle_sigterm(signum, frame):
  raise KeyboardInterrupt

signal.signal(signal.SIGTERM, handle_sigterm)

try:
  controller.run()
except KeyboardInterrupt:
  print "INFO: Interrupted by user."
finally:
  controller.shutdown()

